version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
      nodejs: 14
    commands:
      # Install the AWS CLI and kubectl
      - echo "Installing AWS CLI"
      - curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install
      - aws --version
      - echo "Installing kubectl"
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - sudo mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --client

  pre_build:
    commands:
      # Configure AWS CLI to authenticate using IAM Role or user
      - echo "Configuring AWS CLI"
      # - aws configure set region $AWS_DEFAULT_REGION
      # - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
      # - kubectl get svc # Verify if the connection to the cluster is successful

  build:
    commands:
      # Example command to deploy to the EKS cluster
      - echo "Deploying to EKS"
      # - kubectl apply -f k8s/deployment.yaml  # Adjust this to your service definition
      # - kubectl apply -f k8s/service.yaml     # Adjust this to your service definition
      # - kubectl rollout status deployment/my-deployment  # Optionally wait for deployment to complete

  post_build:
    commands:
      - echo "Deployment complete"

# artifacts:
#   files:
#     - k8s/*  # Specify any files that need to be outputted (optional)
