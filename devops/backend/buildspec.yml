version: 0.2

env:
  variables:
    ACCOUNT_B_ROLE_ARN: arn:aws:iam::854090096685:role/ACC-A-CB-ROLE
    REGION: us-east-2
phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      # Install dependencies
      # - echo "Installing dependencies"
      # - sudo apt-get update -y
      # - sudo apt-get install -y unzip curl
      # - echo "Installing kubectl"
      # - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      # - chmod +x ./kubectl
      # - sudo mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --client

  pre_build:
    commands:
      # Configure AWS CLI to authenticate using IAM Role or user
      - echo "Configuring AWS CLI"
      # - aws configure set region $AWS_DEFAULT_REGION
      # - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
      # - kubectl get svc # Verify if the connection to the cluster is successful

  build:
    commands:
      # Example command to deploy to the EKS cluster
      - echo "Deploying to EKS"
      - docker --version
      - aws --version
      - CREDS=$(aws sts assume-role  --role-arn $ACCOUNT_B_ROLE_ARN --role-session-name "DeploySession" --region $REGION)
      - export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r .Credentials.AccessKeyId)
      - export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r .Credentials.SecretAccessKey)
      - export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r .Credentials.SessionToken)
      - aws s3api create-bucket --bucket myucket-4rmar-25 --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2
      
  post_build:
    commands:
      - echo "Deployment complete"

# artifacts:
#   files:
#     - k8s/*  # Specify any files that need to be outputted (optional)
